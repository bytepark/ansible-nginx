---
# nginx provisioning

- name: "[NGINX] Add Signing Key"
  apt_key:
    url: "{{ nginx_repo_key }}"
  when: nginx_repo_key is defined

- name: "[NGINX] Add repo to sources list"
  apt_repository:
    repo: "{{nginx_repo}}"
    state: present

- name: "[NGINX] Install Nginx"
  apt:
    update_cache: yes
    name: '{{nginx_package}}'
    state: present

- name: "[NGINX Secure] |Â Generate dhparam file"
  command: openssl dhparam -out {{nginx_dhparam_path}} {{nginx_dhparam_encryption_size | 2048}}
  args:
    creates: "{{nginx_dhparam_path}}"
  when: nginx_dhparam_path is defined and nginx_dhparam_path
  notify:
    - reload nginx

- name: Create auth directory
  file:
    path:  "/etc/nginx/auth"
    state: directory

- name: "[NGINX] Create http basic auth files"
  copy:
    content: "{{ item.auth }}"
    dest: "{{ item.auth_basic_file }}"
  when: item.auth is defined and item.auth_basic_file is defined
  with_items:
    - "{{ nginx_vhosts | default([]) }}"

- name: "[NGINX] Copy secure.conf"
  template:
    src: "secure.conf.j2"
    dest: "/etc/nginx/secure.conf"
    mode: 0644
  notify:
  - reload nginx

- name: "[NGINX] Copy pagespeed.conf"
  template:
    src: "pagespeed.conf.j2"
    dest: "/etc/nginx/pagespeed.conf"
    mode: 0644
  notify:
    - reload nginx

- name: "[NGINX] Copy nginx.conf"
  template:
    src: "nginx.conf.j2"
    dest: "/etc/nginx/nginx.conf"
    mode: 0644
  notify:
    - reload nginx

- name: "[NGINX] Disable the default site"
  file:
    path: "/etc/nginx/conf.d/default.conf"
    state: absent
  notify:
    - reload nginx

- name: "[NGINX] Check and setup doc roots"
  when: item.docroot is defined
  file:
    path:  "{{ item.docroot }}/app/web"
    state: directory
  with_items:
    - "{{ nginx_vhosts | default([]) }}"

- name: "[NGINX] Create the configuration file for vHosts"
  when: nginx_vhosts is defined
  template:
    src: "vhost.conf.j2"
    dest: /etc/nginx/conf.d/{{ item.hostname }}.conf
    mode: 0644
  with_items:
    - "{{ nginx_vhosts }}"
  notify:
    - reload nginx
